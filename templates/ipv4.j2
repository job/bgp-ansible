filter mieli_in
{
    if (net = 192.147.168.0/25) then {
        preference = 111;
        accept;
    }
    reject;
}

filter ircd_in
{
    if (net = 165.254.255.132/32) then accept;
    reject;
}

define TRANSIT_FREE_ASNS = [
{% for asn in bgp_params['transit_free_asns'] %}
     {{ asn }}{%- if not loop.last -%},{% endif %}

{% endfor %}
];

function reject_transit_paths()
int set transit_asns;
{
     transit_asns = TRANSIT_FREE_ASNS;
     if (bgp_path ~ transit_asns) then {
         print "Reject: Transit Free ASNs found downstream: ", net, " ", bgp_path;
         reject;
     }
}

filter AS48603_import
prefix set AS48603;
int set AS48603_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS48603.ipv4.conf";
    include "filters/AS48603.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS48603_origins) then {
        print "AS48603_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS48603: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS48603) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS48603_import() protocol ", proto, " prefix not in IRR AS48603: ", net, " path: ", bgp_path;
    reject;
}

filter AS208241_import
prefix set AS208241;
int set AS208241_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS208241.ipv4.conf";
    include "filters/AS208241.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS208241_origins) then {
        print "AS208241_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS208241: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS208241) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS208241_import() protocol ", proto, " prefix not in IRR AS208241: ", net, " path: ", bgp_path;
    reject;
}

filter AS44854_import
prefix set AS44854;
int set AS44854_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS44854.ipv4.conf";
    include "filters/AS44854.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS44854_origins) then {
        print "AS44854_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS44854: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS44854) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS44854_import() protocol ", proto, " prefix not in IRR AS44854: ", net, " path: ", bgp_path;
    reject;
}

filter AS1136_import
prefix set AS1136;
int set AS1136_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS1136.ipv4.conf";
    include "filters/AS1136.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS1136_origins) then {
        print "AS1136_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS1136: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS1136) then {
        accept;
    }
    print "AS1136_import() protocol ", proto, " prefix not in IRR AS1136: ", net, " path: ", bgp_path;
    reject;
}
