{% include 'ipv6.j2' %}

filter ntt_out
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    if ( net = 2001:67c:208c::/48 ) then {
        bgp_large_community.add ((15562,1,1));
        accept;
    }

    if ( net ~ [
            2001:728:1808::/48,
            2a04:ec40:ff24::/48,
            2001:067c:1b43::/48
    ] ) then {
        bgp_community.add ((65535,65281));
        accept;
    }

    if ( net = 2001:728:1808:2::132/128 ) then {
        bgp_path.prepend(15562);
        bgp_community.add ((65535,65281));
        accept;
    }

    # downstream routes
    if ( (15562,0,1) ~ bgp_large_community ) then {
        accept;
    }
    reject;
}

filter AS31451_import
prefix set AS31451;
int set AS31451_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS31451.ipv6.conf";
    include "filters/AS31451.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS31451_origins) then {
        print "AS31451_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS-KING: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS31451) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS31451_import() protocol ", proto, " prefix not in IRR AS-KING: ", net, " path: ", bgp_path;
    reject;
}

filter AS12654_import
prefix set AS12654;
int set AS12654_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS12654.ipv6.conf";
    include "filters/AS12654.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last~ AS12654_origins) then {
        print "AS12654_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS12654: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS12654) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS12654_import() protocol ", proto, " prefix not in IRR AS12654: ", net, " path: ", bgp_path;
    reject;
}

filter AS43997_import
prefix set AS43997;
int set AS43997_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS43997.ipv6.conf";
    include "filters/AS43997.origins.conf";
    reject_long_aspaths();
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS43997_origins) then {
        print "AS43997_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS43997: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS43997) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS43997_import() protocol ", proto, " prefix not in IRR AS43997: ", net, " path: ", bgp_path;
    reject;
}

filter AS205956_import
prefix set AS205956;
int set AS205956_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS205956.ipv6.conf";
    include "filters/AS205956.origins.conf";
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS205956_origins) then {
        print "AS205956_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS205956: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS205956) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS205956_import() protocol ", proto, " prefix not in IRR AS205956: ", net, " path: ", bgp_path;
    reject;
}

filter AS60927_import
prefix set AS60927;
int set AS60927_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS60927.ipv6.conf";
    include "filters/AS60927.origins.conf";
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS60927_origins) then {
        print "AS60927_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS60927: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS60927) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS60927_import() protocol ", proto, " prefix not in IRR AS60927: ", net, " path: ", bgp_path;
    reject;
}

filter AS57782_import
prefix set AS57782;
int set AS57782_origins;
{
{% if bgp['drain_mode'] %}
    send_graceful_shutdown();
{% endif %}
    include "filters/AS57782.ipv6.conf";
    include "filters/AS57782.origins.conf";
    reject_transit_paths();
    reject_bogon_asns();
    reject_bogon_prefixes();
    reject_rpki_invalid();
    if !(bgp_path.last ~ AS57782_origins) then {
        print "AS57782_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS57782: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS57782) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS57782_import() protocol ", proto, " prefix not in IRR AS57782: ", net, " path: ", bgp_path;
    reject;
}
